<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>test</title>
    <link href="/2023/07/26/test/"/>
    <url>/2023/07/26/test/</url>
    
    <content type="html"><![CDATA[<h1 id="NumPy-库"><a href="#NumPy-库" class="headerlink" title="NumPy 库"></a>NumPy 库</h1><h2 id="NumPy-的基本使用"><a href="#NumPy-的基本使用" class="headerlink" title="NumPy 的基本使用"></a>NumPy 的基本使用</h2><h3 id="函数的导入"><a href="#函数的导入" class="headerlink" title="函数的导入"></a>函数的导入</h3><figure class="highlight python"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br></pre></div></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np<br></code></pre></td></tr></table></figure><h3 id="数组的创建"><a href="#数组的创建" class="headerlink" title="数组的创建"></a>数组的创建</h3><p>将列表或元组转化为数组</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python">a = np.array([<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>])<br></code></pre></td></tr></table></figure><p>使用 arange 在给定区间内创建等差数组</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs arduino"><span class="hljs-built_in">arange</span>(start, stop, step, dtpye)<br>#生成区间[start,stop)上步长间隔为step的等差数列<br></code></pre></td></tr></table></figure><p>使用 linspace 在给定区间内创建间隔相等的数组</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">linspace(<span class="hljs-literal">start</span>,<span class="hljs-literal">stop</span>,<span class="hljs-attr">num=</span><span class="hljs-number">50</span>,<span class="hljs-attr">endpoint=</span><span class="hljs-literal">True</span>)<br><span class="hljs-comment">#生成区间[start,stop]上间隔相等的num个数据的等差数列，num的默认值为50</span><br></code></pre></td></tr></table></figure><p>使用 logspace 在给定区间上生成等比数组</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">logspace</span>(start,stop,num=<span class="hljs-number">50</span>,endpoint=True,base=<span class="hljs-number">10</span>.<span class="hljs-number">0</span>)<br><span class="hljs-comment">#默认生成区间[10^start,10^stop]上的num个数据的等比数组</span><br></code></pre></td></tr></table></figure><p>使用ones、zeros、empty、ones_like等系列函数</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span> = np.<span class="hljs-literal">on</span>es(<span class="hljs-number">4</span>, dtype=int)     <span class="hljs-comment">#输出[1, 1, 1, 1]</span><br><span class="hljs-attr">b</span> = np.<span class="hljs-literal">on</span>es((<span class="hljs-number">4</span>,), dtype=int)  <span class="hljs-comment">#同a</span><br><span class="hljs-attr">c</span>= np.<span class="hljs-literal">on</span>es((<span class="hljs-number">4</span>,<span class="hljs-number">1</span>),dtype=int)   <span class="hljs-comment">#输出4行1列的数组</span><br><span class="hljs-attr">d</span> = np.zeros(<span class="hljs-number">4</span>,dtype=int)     <span class="hljs-comment">#输出[0, 0, 0, 0]</span><br><span class="hljs-attr">e</span> = np.empty(<span class="hljs-number">3</span>,dtype=int)     <span class="hljs-comment">#生成3个元素的空数组行向量</span><br><span class="hljs-attr">f</span> = np.eye(<span class="hljs-number">3</span>,dtype=int)       <span class="hljs-comment">#生成3阶单位阵</span><br><span class="hljs-attr">g</span> = np.eye(<span class="hljs-number">3</span>, k=<span class="hljs-number">0</span>)  <span class="hljs-comment">#生成第k对角线的元素为1，其他元素为0的3阶方阵</span><br><span class="hljs-attr">h</span> = np.zeros_like(a)          <span class="hljs-comment">#生成与a同维数的全0数组</span><br></code></pre></td></tr></table></figure><h3 id="数组元素的索引"><a href="#数组元素的索引" class="headerlink" title="数组元素的索引"></a>数组元素的索引</h3><p>​    对于一维数组，无非就记住一个原则：列表名(数组名)[start: end: step],但不包括索引end对应的值。</p><p>​    二维数据列表元素的引用方式为a[i] [j]; array数组元素的引用方式可以为a[i,j]。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span> = np.arange(<span class="hljs-number">16</span>).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>)  #生成<span class="hljs-number">4</span>行<span class="hljs-number">4</span>列的数组<br><span class="hljs-attribute">b</span> = a[<span class="hljs-number">1</span>][<span class="hljs-number">2</span>]   #输出<span class="hljs-number">6</span><br><span class="hljs-attribute">c</span> = a[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]   #同b<br><span class="hljs-attribute">d</span> = a[<span class="hljs-number">1</span>:<span class="hljs-number">2</span>, <span class="hljs-number">2</span>:<span class="hljs-number">3</span>]  #输出[[<span class="hljs-number">6</span>]]<br><span class="hljs-attribute">x</span> = np.array([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>])<br><span class="hljs-attribute">print</span>(a[x==<span class="hljs-number">1</span>])  #输出a的第<span class="hljs-number">2</span>、<span class="hljs-number">4</span>行元素<br></code></pre></td></tr></table></figure><h3 id="矩阵的合并"><a href="#矩阵的合并" class="headerlink" title="矩阵的合并"></a>矩阵的合并</h3><p>vstack([A,B])     矩阵上下合并</p><p>hstack([A,B])    矩阵左右合并</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span> = np.arange(<span class="hljs-number">16</span>).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>)  <span class="hljs-comment">#生成4行4列的数组</span><br><span class="hljs-attr">b</span> = np.floor(<span class="hljs-number">5</span>*np.random.random((<span class="hljs-number">2</span>, <span class="hljs-number">4</span>)))<span class="hljs-comment">#元素小于5</span><br><span class="hljs-attr">c</span> = np.ceil(<span class="hljs-number">6</span>*np.random.random((<span class="hljs-number">4</span>, <span class="hljs-number">2</span>)))<span class="hljs-comment">#元素不超过6</span><br><span class="hljs-attr">d</span> = np.vstack([a, b])  <span class="hljs-comment">#上下合并矩阵</span><br><span class="hljs-attr">e</span> = np.hstack([a, c])  <span class="hljs-comment">#左右合并矩阵</span><br></code></pre></td></tr></table></figure><h3 id="矩阵的分割"><a href="#矩阵的分割" class="headerlink" title="矩阵的分割"></a>矩阵的分割</h3><p>vsplit(a, m)    把a平均分成m个行数组</p><p>hsplit(a, n)    把a平均分成n个列数组。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.arange</span>(<span class="hljs-number">16</span>)<span class="hljs-selector-class">.reshape</span>(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>)  #生成<span class="hljs-number">4</span>行<span class="hljs-number">4</span>列的数组<br><span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.vsplit</span>(<span class="hljs-selector-tag">a</span>, <span class="hljs-number">2</span>)             #行分割，平均分成<span class="hljs-number">2</span>分<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;行分割：\n&#x27;</span>,b[<span class="hljs-number">0</span>],<span class="hljs-string">&#x27;\n&#x27;</span>,b[<span class="hljs-number">1</span>])</span></span><br>c = np<span class="hljs-selector-class">.hsplit</span>(<span class="hljs-selector-tag">a</span>, <span class="hljs-number">4</span>)             #列分割，平均分成<span class="hljs-number">4</span>分<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;列分割：\n&#x27;</span>,c[<span class="hljs-number">0</span>],<span class="hljs-string">&#x27;\n&#x27;</span>,c[<span class="hljs-number">1</span>],<span class="hljs-string">&#x27;\n&#x27;</span>,c[<span class="hljs-number">2</span>], <span class="hljs-string">&#x27;\n&#x27;</span>,c[<span class="hljs-number">3</span>])</span></span><br></code></pre></td></tr></table></figure><h3 id="矩阵的简单运算"><a href="#矩阵的简单运算" class="headerlink" title="矩阵的简单运算"></a>矩阵的简单运算</h3><ul><li><h4 id="求和"><a href="#求和" class="headerlink" title="求和"></a>求和</h4></li></ul><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs livecodeserver"><span class="hljs-keyword">a</span> = np.array([[<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>]])<br>b = <span class="hljs-keyword">a</span>.<span class="hljs-built_in">sum</span>()   <span class="hljs-comment">#使用方法，求矩阵所有元素的和</span><br>c1 = <span class="hljs-built_in">sum</span>(<span class="hljs-keyword">a</span>)   <span class="hljs-comment">#使用内置函数，求矩阵逐列元素的和</span><br>c2 = np.<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">a</span>, axis=<span class="hljs-number">0</span>) <span class="hljs-comment">#使用函数，求矩阵逐列元素的和</span><br>c3 = np.<span class="hljs-built_in">sum</span>(<span class="hljs-keyword">a</span>, axis=<span class="hljs-number">0</span>, keepdims=True)   <span class="hljs-comment">#逐列求和</span><br>print(c2.shape, c3.shape)  <span class="hljs-comment">#c2是(3,)数组，c3是(1,3)数组</span><br><span class="hljs-comment">#当axis=1时，表示逐行</span><br></code></pre></td></tr></table></figure><ul><li><h4 id="逐个元素运算"><a href="#逐个元素运算" class="headerlink" title="逐个元素运算"></a>逐个元素运算</h4></li></ul><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">a</span> = np.array([[<span class="hljs-number">0</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">4</span>]])<br><span class="hljs-attr">b</span> = np.array([[<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>], [<span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">4</span>]])<br><span class="hljs-attr">c</span> = a / b   <span class="hljs-comment">#两个矩阵对应元素相除</span><br><span class="hljs-attr">d</span> = np.array([<span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>])<br><span class="hljs-attr">e</span> = a * d   <span class="hljs-comment">#d先广播成与a同维数的矩阵，再逐个元素相乘</span><br><span class="hljs-attr">f</span> = np.array([[<span class="hljs-number">3</span>],[<span class="hljs-number">2</span>]])<br><span class="hljs-attr">g</span> = a * f   <span class="hljs-comment">#f先广播成与a同维数的矩阵，再逐个元素相乘</span><br><span class="hljs-attr">h</span> = a ** (<span class="hljs-number">1</span>/<span class="hljs-number">2</span>)  <span class="hljs-comment">#a矩阵逐个元素的1/2次幂。</span><br></code></pre></td></tr></table></figure><ul><li><h4 id="矩阵乘法"><a href="#矩阵乘法" class="headerlink" title="矩阵乘法"></a>矩阵乘法</h4></li></ul><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">a</span> = np.ones(<span class="hljs-number">4</span>,dtype=int)        #[<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">1</span>]<br><span class="hljs-attribute">b</span> = np.arange(<span class="hljs-number">2</span>, <span class="hljs-number">10</span>, <span class="hljs-number">2</span>)    #[<span class="hljs-number">2</span>,<span class="hljs-number">4</span>,<span class="hljs-number">6</span>,<span class="hljs-number">8</span>]<br><span class="hljs-attribute">c</span> = a @ b  #a作为行向量, b作为列向量 <span class="hljs-number">20</span>.<span class="hljs-number">0</span><br><span class="hljs-attribute">d</span> = np.arange(<span class="hljs-number">16</span>).reshape(<span class="hljs-number">4</span>,<span class="hljs-number">4</span>) <br>  <span class="hljs-comment">#[[0,1,2,3],[4,5,6,7],[8,9,10,11],[12,13,14,15]</span><br><span class="hljs-attribute">f</span> = a @ d  #a作为行向量 <span class="hljs-meta"> [24 28 32 36]</span><br><span class="hljs-attribute">g</span> = d @ a  #a作为列向量<span class="hljs-meta">[ 6 22 38 54]</span><br></code></pre></td></tr></table></figure><ul><li><h4 id="矩阵代数与线性运算-–-linalg"><a href="#矩阵代数与线性运算-–-linalg" class="headerlink" title="矩阵代数与线性运算 – linalg"></a>矩阵代数与线性运算 – linalg</h4></li></ul><p><img src="test/%E5%9B%BE%E7%89%871.png"></p><h5 id="norm-–-求向量或矩阵的范数"><a href="#norm-–-求向量或矩阵的范数" class="headerlink" title="norm – 求向量或矩阵的范数"></a>norm – 求向量或矩阵的范数</h5><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">norm</span><span class="hljs-params">(x, ord=None, axis=None, keepdims=False)</span></span><br><br>x: 表示要度量的向量或矩阵；<br>ord: 表示范数的种类，例如<span class="hljs-number">1</span>范数，<span class="hljs-number">2</span>范数，范数。<br>axis: axis=<span class="hljs-number">1</span>表示按行向量处理，求多个行向量的范数；axis=<span class="hljs-number">0</span>表示按列向量处理，求多个列向量的范数；axis=None表示矩阵范数。<br>keepdims: 是否保持矩阵的二维特性。True表示保持矩阵的二维特性，False则相反。<br><br><span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[[0, 3, 4]</span>, <span class="hljs-selector-attr">[1, 6, 4]</span>])<br><span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.linalg</span><span class="hljs-selector-class">.norm</span>(<span class="hljs-selector-tag">a</span>, axis=<span class="hljs-number">1</span>)  #求行向量<span class="hljs-number">2</span>范数<br>c = np<span class="hljs-selector-class">.linalg</span><span class="hljs-selector-class">.norm</span>(<span class="hljs-selector-tag">a</span>, axis=<span class="hljs-number">0</span>)  #求列向量<span class="hljs-number">2</span>范数<br>d = np<span class="hljs-selector-class">.linalg</span><span class="hljs-selector-class">.norm</span>(a)   #求矩阵<span class="hljs-number">2</span>范数<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;行向量2范数为：&#x27;</span>, np.round(b, <span class="hljs-number">4</span>)</span></span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;列向量2范数为：&#x27;</span>, np.round(c, <span class="hljs-number">4</span>)</span></span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;矩阵2范数为：&#x27;</span>, round(d, <span class="hljs-number">4</span>)</span></span>)<br></code></pre></td></tr></table></figure><h5 id="inv-–-求逆矩阵"><a href="#inv-–-求逆矩阵" class="headerlink" title="inv – 求逆矩阵"></a>inv – 求逆矩阵</h5><h5 id="pinv-–-求广义矩阵"><a href="#pinv-–-求广义矩阵" class="headerlink" title="pinv – 求广义矩阵"></a>pinv – 求广义矩阵</h5><h5 id="solve-–-求解线性方程组"><a href="#solve-–-求解线性方程组" class="headerlink" title="solve – 求解线性方程组"></a>solve – 求解线性方程组</h5><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片2.png"></p><figure class="highlight stan"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs stan">a = np.<span class="hljs-type">array</span>([[<span class="hljs-number">3</span>, <span class="hljs-number">1</span>], [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>]])<br>b = np.<span class="hljs-type">array</span>([<span class="hljs-number">9</span>, <span class="hljs-number">8</span>])<br>x1 = np.linalg.<span class="hljs-built_in">inv</span>(a) @ b  <span class="hljs-comment">#第一种解法</span><br><span class="hljs-comment">#上面语句中@表示矩阵乘法</span><br>x2 = np.linalg.solve(a, b) <span class="hljs-comment">#第二种解法</span><br><span class="hljs-built_in">print</span>(x1); <span class="hljs-built_in">print</span>(x2)<br>求得x=<span class="hljs-number">2</span>，y=<span class="hljs-number">3</span>。<br></code></pre></td></tr></table></figure><h5 id="det-–-求解矩阵的行列式"><a href="#det-–-求解矩阵的行列式" class="headerlink" title="det – 求解矩阵的行列式"></a>det – 求解矩阵的行列式</h5><h5 id="lstsq-–-最小二乘法求解超定线性方程组"><a href="#lstsq-–-最小二乘法求解超定线性方程组" class="headerlink" title="lstsq – 最小二乘法求解超定线性方程组"></a>lstsq – 最小二乘法求解超定线性方程组</h5><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片3.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[[3, 1]</span>, <span class="hljs-selector-attr">[1, 2]</span>, <span class="hljs-selector-attr">[1, 1]</span>])<br><span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.array</span>(<span class="hljs-selector-attr">[9, 8, 6]</span>)<br>x = np<span class="hljs-selector-class">.linalg</span><span class="hljs-selector-class">.pinv</span>(a) @ <span class="hljs-selector-tag">b</span>  <br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(np.round(x, <span class="hljs-number">4</span>)</span></span>)<br>    求得的最小二乘解为x=<span class="hljs-number">2</span>，y=<span class="hljs-number">3.1667</span><br></code></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs lua">import numpy as np     # 构造一个线性方程组   <br>A = np.array(<span class="hljs-string">[[1, 2], [3, 4], [5, 6]]</span>)   <br>B = np.array(<span class="hljs-string">[[-1], [2], [3]]</span>)     <br># 使用lstsq函数求解线性方程组   <br>x, residuals, rank, s = np.linalg.lstsq(A, B, rcond=None)     <br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;最小二乘解：&quot;</span>, x)<br>#函数返回的结果包括最小二乘解 x、残差平方和 residuals、矩阵的秩 rank 和奇异值 s。<br></code></pre></td></tr></table></figure><h5 id="eig-–-求矩阵的特征值和特征向量"><a href="#eig-–-求矩阵的特征值和特征向量" class="headerlink" title="eig – 求矩阵的特征值和特征向量"></a>eig – 求矩阵的特征值和特征向量</h5><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片4.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-tag">a</span> = np<span class="hljs-selector-class">.eye</span>(<span class="hljs-number">4</span>)<br><span class="hljs-selector-tag">b</span> = np<span class="hljs-selector-class">.rot90</span>(a)<br>c, d = np<span class="hljs-selector-class">.linalg</span><span class="hljs-selector-class">.eig</span>(b)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;特征值为：&#x27;</span>, c)</span></span><br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(<span class="hljs-string">&#x27;特征向量为：\n&#x27;</span>, d)</span></span><br></code></pre></td></tr></table></figure><h5 id="eigvals-–-求矩阵的特征值"><a href="#eigvals-–-求矩阵的特征值" class="headerlink" title="eigvals – 求矩阵的特征值"></a>eigvals – 求矩阵的特征值</h5><h5 id="svd-–-矩阵的奇异值分解"><a href="#svd-–-矩阵的奇异值分解" class="headerlink" title="svd – 矩阵的奇异值分解"></a>svd – 矩阵的奇异值分解</h5><h5 id="qr-–-求矩阵的QR分解"><a href="#qr-–-求矩阵的QR分解" class="headerlink" title="qr – 求矩阵的QR分解"></a>qr – 求矩阵的QR分解</h5><h1 id="Pandas库"><a href="#Pandas库" class="headerlink" title="Pandas库"></a>Pandas库</h1><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片5.png"></p><h2 id="引用Pandas库"><a href="#引用Pandas库" class="headerlink" title="引用Pandas库"></a>引用Pandas库</h2><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs elm"><span class="hljs-keyword">import</span> pandas <span class="hljs-keyword">as</span> pd<br></code></pre></td></tr></table></figure><h2 id="生成二维数组"><a href="#生成二维数组" class="headerlink" title="生成二维数组"></a>生成二维数组</h2><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片6.png"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">dates=pd.date<span class="hljs-constructor">_range(<span class="hljs-params">start</span>=&#x27;20191101&#x27;,<span class="hljs-params">end</span>=&#x27;20191124&#x27;,<span class="hljs-params">freq</span>=&#x27;D&#x27;)</span><br>a1=pd.<span class="hljs-constructor">DataFrame(<span class="hljs-params">np</span>.<span class="hljs-params">random</span>.<span class="hljs-params">randn</span>(24,4)</span>, index=dates, columns=<span class="hljs-built_in">list</span>(&#x27;ABCD&#x27;))<br>a2=pd.<span class="hljs-constructor">DataFrame(<span class="hljs-params">np</span>.<span class="hljs-params">random</span>.<span class="hljs-params">rand</span>(24,4)</span>)<br></code></pre></td></tr></table></figure><h2 id="读写文件"><a href="#读写文件" class="headerlink" title="读写文件"></a>读写文件</h2><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片7.png"></p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">数据写入文件示例。<br>#程序文件ex2_38_1.py<br>import pandas <span class="hljs-keyword">as</span> pd<br>import numpy <span class="hljs-keyword">as</span> np<br>dates=pd.date<span class="hljs-constructor">_range(<span class="hljs-params">start</span>=&#x27;20191101&#x27;, <span class="hljs-params">end</span>=&#x27;20191124&#x27;, <span class="hljs-params">freq</span>=&#x27;D&#x27;)</span><br>a1=pd.<span class="hljs-constructor">DataFrame(<span class="hljs-params">np</span>.<span class="hljs-params">random</span>.<span class="hljs-params">randn</span>(24,4)</span>, index=dates, columns=<span class="hljs-built_in">list</span>(&#x27;ABCD&#x27;))<br>a2=pd.<span class="hljs-constructor">DataFrame(<span class="hljs-params">np</span>.<span class="hljs-params">random</span>.<span class="hljs-params">randn</span>(24,4)</span>)<br>a1.<span class="hljs-keyword">to</span><span class="hljs-constructor">_excel(&#x27;<span class="hljs-params">data2_38_1</span>.<span class="hljs-params">xlsx</span>&#x27;)</span><br>a2.<span class="hljs-keyword">to</span><span class="hljs-constructor">_csv(&#x27;<span class="hljs-params">data2_38_2</span>.<span class="hljs-params">csv</span>&#x27;)</span><br>f=pd.<span class="hljs-constructor">ExcelWriter(&#x27;<span class="hljs-params">data2_38_3</span>.<span class="hljs-params">xlsx</span>&#x27;)</span>  #创建文件对象<br>a1.<span class="hljs-keyword">to</span><span class="hljs-constructor">_excel(<span class="hljs-params">f</span>,<span class="hljs-string">&quot;Sheet1&quot;</span>)</span>  #把a1写入Excel文件<br>a2.<span class="hljs-keyword">to</span><span class="hljs-constructor">_excel(<span class="hljs-params">f</span>,<span class="hljs-string">&quot;Sheet2&quot;</span>)</span>  #把a2写入另一个表单中<br>f.save<span class="hljs-literal">()</span><br><br>如果写入数据时，不包含行索引，Python程序如下：<br>#程序文件ex2_38_2.py<br>import pandas <span class="hljs-keyword">as</span> pd<br>import numpy <span class="hljs-keyword">as</span> np<br>dates=pd.date<span class="hljs-constructor">_range(<span class="hljs-params">start</span>=&#x27;20191101&#x27;,  <span class="hljs-params">end</span>=&#x27;20191124&#x27;,  <span class="hljs-params">freq</span>=&#x27;D&#x27;)</span><br>a1=pd.<span class="hljs-constructor">DataFrame(<span class="hljs-params">np</span>.<span class="hljs-params">random</span>.<span class="hljs-params">randn</span>(24,4)</span>, index=dates, columns=<span class="hljs-built_in">list</span>(&#x27;ABCD&#x27;))<br>a2=pd.<span class="hljs-constructor">DataFrame(<span class="hljs-params">np</span>.<span class="hljs-params">random</span>.<span class="hljs-params">randn</span>(24,4)</span>)<br>a1.<span class="hljs-keyword">to</span><span class="hljs-constructor">_excel(&#x27;<span class="hljs-params">data2_38_4</span>.<span class="hljs-params">xlsx</span>&#x27;, <span class="hljs-params">index</span>=False)</span>  #不包括行索引<br>a2.<span class="hljs-keyword">to</span><span class="hljs-constructor">_csv(&#x27;<span class="hljs-params">data2_38_5</span>.<span class="hljs-params">csv</span>&#x27;, <span class="hljs-params">index</span>=False)</span>   #不包括行索引<br>f=pd.<span class="hljs-constructor">ExcelWriter(&#x27;<span class="hljs-params">data2_38_6</span>.<span class="hljs-params">xlsx</span>&#x27;)</span>  #创建文件对象<br>a1.<span class="hljs-keyword">to</span><span class="hljs-constructor">_excel(<span class="hljs-params">f</span>,<span class="hljs-string">&quot;Sheet1&quot;</span>, <span class="hljs-params">index</span>=False)</span>  #把a1写入Excel文件<br>a2.<span class="hljs-keyword">to</span><span class="hljs-constructor">_excel(<span class="hljs-params">f</span>,<span class="hljs-string">&quot;Sheet2&quot;</span>, <span class="hljs-params">index</span>=False)</span>  #把a2写入另一个表单中<br>f.save<span class="hljs-literal">()</span><br></code></pre></td></tr></table></figure><p>从文件中读入数据示例</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs reasonml">import pandas <span class="hljs-keyword">as</span> pd<br>a=pd.read<span class="hljs-constructor">_csv(<span class="hljs-string">&quot;data2_38_2.csv&quot;</span>, <span class="hljs-params">usecols</span>=<span class="hljs-params">range</span>(1,5)</span>)<br>b=pd.read<span class="hljs-constructor">_excel(<span class="hljs-string">&quot;data2_38_3.xlsx&quot;</span>, <span class="hljs-string">&quot;Sheet2&quot;</span>, <span class="hljs-params">usecols</span>=<span class="hljs-params">range</span>(1,5)</span>)<br></code></pre></td></tr></table></figure><h2 id="数据的一些预处理"><a href="#数据的一些预处理" class="headerlink" title="数据的一些预处理"></a>数据的一些预处理</h2><h3 id="DataFrame数据的拆分、合并和分组计算"><a href="#DataFrame数据的拆分、合并和分组计算" class="headerlink" title="DataFrame数据的拆分、合并和分组计算"></a>DataFrame数据的拆分、合并和分组计算</h3><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">d</span>=pd.DataFrame(np.random.randint(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,(<span class="hljs-number">10</span>,<span class="hljs-number">4</span>)), columns=list(<span class="hljs-string">&quot;ABCD&quot;</span>))<br><span class="hljs-attr">d1</span>=d[:<span class="hljs-number">4</span>]  <span class="hljs-comment">#获取前4行数据</span><br><span class="hljs-attr">d2</span>=d[<span class="hljs-number">4</span>:]  <span class="hljs-comment">#获取第5行以后的数据</span><br><span class="hljs-attr">dd</span>=pd.concat([d1,d2])   <span class="hljs-comment">#数据行合并</span><br><span class="hljs-attr">s1</span>=d.groupby(<span class="hljs-string">&#x27;A&#x27;</span>).mean()      <span class="hljs-comment">#数据分组求均值</span><br><span class="hljs-attr">s2</span>=d.groupby(<span class="hljs-string">&#x27;A&#x27;</span>).apply(sum)  <span class="hljs-comment">#数据分组求和</span><br></code></pre></td></tr></table></figure><h3 id="数据的选取与清洗"><a href="#数据的选取与清洗" class="headerlink" title="数据的选取与清洗"></a>数据的选取与清洗</h3><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片8.png"></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import pandas as pd<br>import numpy as np<br><span class="hljs-selector-tag">a</span> = pd<span class="hljs-selector-class">.DataFrame</span>(np<span class="hljs-selector-class">.random</span><span class="hljs-selector-class">.randint</span>(<span class="hljs-number">1</span>,<span class="hljs-number">6</span>,(<span class="hljs-number">5</span>,<span class="hljs-number">3</span>)),<br>                 index=<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>]</span>,<br>                 <span class="hljs-attribute">columns</span>=[<span class="hljs-string">&#x27;one&#x27;</span>, <span class="hljs-string">&#x27;two&#x27;</span>, <span class="hljs-string">&#x27;three&#x27;</span>])<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.loc</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;one&#x27;</span>]</span> = np<span class="hljs-selector-class">.nan</span>  #修改第<span class="hljs-number">1</span>行第<span class="hljs-number">1</span>列的数据<br><span class="hljs-selector-tag">b</span> = <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.iloc</span><span class="hljs-selector-attr">[1:3, 0:2]</span><span class="hljs-selector-class">.values</span>  #提取第<span class="hljs-number">2</span>、<span class="hljs-number">3</span>行，第<span class="hljs-number">1</span>、<span class="hljs-number">2</span>列数据<br><span class="hljs-selector-tag">a</span><span class="hljs-selector-attr">[<span class="hljs-string">&#x27;four&#x27;</span>]</span> = <span class="hljs-string">&#x27;bar&#x27;</span>  #增加第<span class="hljs-number">4</span>列数据<br>a2 = <span class="hljs-selector-tag">a</span><span class="hljs-selector-class">.reindex</span>(<span class="hljs-selector-attr">[<span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&#x27;e&#x27;</span>, <span class="hljs-string">&#x27;f&#x27;</span>]</span>)<br>a3 = a2<span class="hljs-selector-class">.dropna</span>()   #删除有不确定值的行<br></code></pre></td></tr></table></figure><h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><h2 id="内置函数-–-open"><a href="#内置函数-–-open" class="headerlink" title="内置函数 – open( )"></a>内置函数 – open( )</h2><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片9.png"></p><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片10.png"></p><h2 id="文件对象常用方法"><a href="#文件对象常用方法" class="headerlink" title="文件对象常用方法"></a>文件对象常用方法</h2><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片11.png"></p><h2 id="上下文管理语句"><a href="#上下文管理语句" class="headerlink" title="上下文管理语句"></a>上下文管理语句</h2><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片12.png"></p><h1 id="SciPy库"><a href="#SciPy库" class="headerlink" title="SciPy库"></a>SciPy库</h1><p><img src="C:\Users\86187\blog\source_posts\数学建模Python函数库\图片13.png"></p><h2 id="求解非线性方程（组）"><a href="#求解非线性方程（组）" class="headerlink" title="求解非线性方程（组）"></a>求解非线性方程（组）</h2><h2 id="积分"><a href="#积分" class="headerlink" title="积分"></a>积分</h2><h2 id="最小二乘法解非线性方程组"><a href="#最小二乘法解非线性方程组" class="headerlink" title="最小二乘法解非线性方程组"></a>最小二乘法解非线性方程组</h2><h2 id="求列矩阵的最大模特征值级吸引的特征向量"><a href="#求列矩阵的最大模特征值级吸引的特征向量" class="headerlink" title="求列矩阵的最大模特征值级吸引的特征向量"></a>求列矩阵的最大模特征值级吸引的特征向量</h2><h1 id="SymPy-库"><a href="#SymPy-库" class="headerlink" title="SymPy 库"></a>SymPy 库</h1><h2 id="引用SymPy库"><a href="#引用SymPy库" class="headerlink" title="引用SymPy库"></a>引用SymPy库</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">inport sympy <span class="hljs-keyword">as</span> <span class="hljs-keyword">sp</span><br></code></pre></td></tr></table></figure><h1 id="Matplotlib-库"><a href="#Matplotlib-库" class="headerlink" title="Matplotlib 库"></a>Matplotlib 库</h1><h2 id="二维绘图"><a href="#二维绘图" class="headerlink" title="二维绘图"></a>二维绘图</h2><h3 id="折线图"><a href="#折线图" class="headerlink" title="折线图"></a>折线图</h3><h2 id="Pandas结合Matplotlib进行数据可视化"><a href="#Pandas结合Matplotlib进行数据可视化" class="headerlink" title="Pandas结合Matplotlib进行数据可视化"></a>Pandas结合Matplotlib进行数据可视化</h2><h3 id="子图"><a href="#子图" class="headerlink" title="子图"></a>子图</h3><h2 id="三维绘图"><a href="#三维绘图" class="headerlink" title="三维绘图"></a>三维绘图</h2><h3 id="三维曲线"><a href="#三维曲线" class="headerlink" title="三维曲线"></a>三维曲线</h3><h3 id="三维曲面图"><a href="#三维曲面图" class="headerlink" title="三维曲面图"></a>三维曲面图</h3><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>线性代数模型</title>
    <link href="/2023/07/16/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E6%A8%A1%E5%9E%8B/"/>
    <url>/2023/07/16/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0%E6%A8%A1%E5%9E%8B/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><span id="more"></span>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>免费搞网站-gitpages</title>
    <link href="/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/"/>
    <url>/2022/05/12/%E5%85%8D%E8%B4%B9%E6%90%9E%E7%BD%91%E7%AB%99-gitpages/</url>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>完全免费的git网站搭建, 参考 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><p>实现的目标: 本地写markdown, 推送github即可以看 github.io 域名查看网页。</p><p>实现的工具</p><ul><li><code>nodejs</code>           hexo生成网站</li><li><code>codeup.aliyun.com</code>    保存自己的博客代码</li><li><code>github.com</code>   静态页面展示 </li><li><code>vscode</code>   开发工具</li></ul><span id="more"></span><h1 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h1><p>参考  <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a> 确保访问OK</p><p>slcnx.github.io 仓库名</p><p>准备index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><div class="code-wrapper"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></div></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>  <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>  hello world<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512214701-16524035403072.png" alt="image-20220512214700115"></p><p><img src="20220512214623.png" alt="image-20220512214617755"></p><h1 id="docker推送github"><a href="#docker推送github" class="headerlink" title="docker推送github"></a>docker推送github</h1><p>新建临时目录，vscode打开, 准备以下文件</p><p>id_rsa_2048 <strong>需要linux生成或xshell生成，不可以自己生成</strong></p><p>id_rsa_2048的公钥加入到以上仓库中</p><p><img src="20220512225649.png" alt="image-20220512225647448"></p><p>Dockerfile</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs routeros"><span class="hljs-keyword">FROM</span> node:latest<br><br><br>WORKDIR /data/git <br><br><span class="hljs-built_in">ADD</span> id_rsa_2048 /root/.ssh/<br><span class="hljs-built_in">RUN</span>  chmod 600 /root/.ssh/id_rsa_2048 <br><br><span class="hljs-built_in">ADD</span> . ./<br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-comment">#RUN npm run build </span><br><br><br><span class="hljs-comment"># 上传到GIT</span><br><br><span class="hljs-built_in">RUN</span> install -dv /data/page/ &amp;&amp; cp -a index.html /data/page/<br><br><br>WORKDIR /data/page/<br>ENV <span class="hljs-attribute">GIT_SSH_COMMAND</span>=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-built_in">RUN</span> git<span class="hljs-built_in"> config </span>--global init.defaultBranch main &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.email <span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> &amp;&amp; git<span class="hljs-built_in"> config </span>--global user.name <span class="hljs-string">&#x27;songliangcheng&#x27;</span>  &amp;&amp; \<br>    git<span class="hljs-built_in"> config </span>--global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \<br>    git init &amp;&amp; \<br>    git remote <span class="hljs-built_in">add</span> origin git@github.com:slcnx/slcnx.github.io.git &amp;&amp; git <span class="hljs-built_in">add</span> -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main <br></code></pre></td></tr></table></figure><p>index.html</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-keyword">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">html</span> <span class="hljs-attr">lang</span>=<span class="hljs-string">&quot;en&quot;</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">charset</span>=<span class="hljs-string">&quot;UTF-8&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">http-equiv</span>=<span class="hljs-string">&quot;X-UA-Compatible&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;IE=edge&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">meta</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;viewport&quot;</span> <span class="hljs-attr">content</span>=<span class="hljs-string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">title</span>&gt;</span>主页<span class="hljs-tag">&lt;/<span class="hljs-name">title</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><br><span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span><br>    cat<br><span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><br><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">D:\vscode_projects\myblog&gt;docker build -t <span class="hljs-built_in">test</span> .<br></code></pre></td></tr></table></figure><p><img src="20220512223352.png" alt="image-20220512223351323"></p><h1 id="本地生成hexo仓库"><a href="#本地生成hexo仓库" class="headerlink" title="本地生成hexo仓库"></a>本地生成hexo仓库</h1><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-cli -g<br><br><span class="hljs-comment"># 当前目录为项目根</span><br>hexo init test1blog<br><span class="hljs-built_in">cd</span> test1blog<br><br><span class="hljs-comment"># 内容</span><br>$ <span class="hljs-built_in">ls</span><br>_config.landscape.yml  node_modules/  package-lock.json  <span class="hljs-built_in">source</span>/<br>_config.yml            package.json   scaffolds/         themes/<br></code></pre></td></tr></table></figure><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs axapta">hexo <span class="hljs-keyword">server</span><br></code></pre></td></tr></table></figure><p><img src="20220512224452.png" alt="image-20220512224451207"></p><h2 id="发布到github"><a href="#发布到github" class="headerlink" title="发布到github"></a>发布到github</h2><p>在以上目录 <code>test1blog</code> 中生成以下文件</p><ol><li><p><code>.dockerignore</code></p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">node_modules/<br></code></pre></td></tr></table></figure></li><li><p><code>Dockerfile</code></p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs dockerfile"><span class="hljs-keyword">FROM</span> node:latest<br><br><br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/git </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> id_rsa_2048 /root/.ssh/</span><br><span class="hljs-keyword">RUN</span><span class="language-bash">  <span class="hljs-built_in">chmod</span> 600 /root/.ssh/id_rsa_2048 </span><br><br><span class="hljs-keyword">ADD</span><span class="language-bash"> . ./</span><br><br><span class="hljs-comment"># 生成网页</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> npm install &amp;&amp; npm run build </span><br><br><span class="hljs-comment"># 上传到GIT</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> install -dv /data/page/ &amp;&amp; <span class="hljs-built_in">cp</span> -a public /data/page/</span><br><br><span class="hljs-keyword">ARG</span> GITHUB<br><span class="hljs-keyword">ARG</span> GUSER <br><span class="hljs-keyword">ARG</span> EMAIL <br><span class="hljs-keyword">WORKDIR</span><span class="language-bash"> /data/page/public/</span><br><span class="hljs-keyword">ENV</span> GIT_SSH_COMMAND=<span class="hljs-string">&#x27;ssh -i /root/.ssh/id_rsa_2048  -o IdentitiesOnly=yes -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no&#x27;</span><br><span class="hljs-keyword">RUN</span><span class="language-bash"> git config --global init.defaultBranch main &amp;&amp; git config --global user.email <span class="hljs-variable">$EMAIL</span>  &amp;&amp; git config --global user.name <span class="hljs-variable">$GUSER</span>  &amp;&amp; \</span><br><span class="language-bash">    git config --global pull.rebase <span class="hljs-literal">true</span> &amp;&amp; \</span><br><span class="language-bash">    git init &amp;&amp; \</span><br><span class="language-bash">    git remote add origin <span class="hljs-variable">$GITHUB</span> &amp;&amp; git add -A &amp;&amp; git commit -m init &amp;&amp; git push --force origin main </span><br></code></pre></td></tr></table></figure></li><li><p><code>id_rsa_2048</code> 以上与github互通的密钥</p></li><li><p>发布</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">docker build <span class="hljs-attr">--build-arg</span> GITHUB=git@github<span class="hljs-selector-class">.com</span>:slcnx/slcnx<span class="hljs-selector-class">.github</span><span class="hljs-selector-class">.io</span><span class="hljs-selector-class">.git</span> <span class="hljs-attr">--build-arg</span> EMAIL=<span class="hljs-string">&#x27;2192383945@qq.com&#x27;</span> <span class="hljs-attr">--build-arg</span> GUSER=<span class="hljs-string">&#x27;songliangcheng&#x27;</span> ./<br></code></pre></td></tr></table></figure></li></ol><p><img src="20220512225143.png" alt="image-20220512225141348"></p><h1 id="codeup一键发布"><a href="#codeup一键发布" class="headerlink" title="codeup一键发布"></a>codeup一键发布</h1><h2 id="添加codeup仓库"><a href="#添加codeup仓库" class="headerlink" title="添加codeup仓库"></a>添加codeup仓库</h2><p>将当前仓库加入到自己的codeup中</p><p><img src="20220512230442.png" alt="image-20220512230441057"></p><p>复制https地址 <a href="https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git">https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git</a></p><h2 id="初始化代码"><a href="#初始化代码" class="headerlink" title="初始化代码"></a>初始化代码</h2><p>将上面test1blog中，初始化，添加代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash">git config --global init.defaultBranch main<br>git init<br>git remote add origin https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br></code></pre></td></tr></table></figure><p>添加文件 <code>.gitignore</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># Logs</span><br>logs<br>*.<span class="hljs-built_in">log</span><br>npm-debug.log*<br>yarn-debug.log*<br>yarn-error.log*<br>lerna-debug.log*<br>.pnpm-debug.log*<br><br><span class="hljs-comment"># Diagnostic reports (https://nodejs.org/api/report.html)</span><br>report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json<br><br><span class="hljs-comment"># Runtime data</span><br>pids<br>*.pid<br>*.seed<br>*.pid.lock<br><br><span class="hljs-comment"># Directory for instrumented libs generated by jscoverage/JSCover</span><br>lib-cov<br><br><span class="hljs-comment"># Coverage directory used by tools like istanbul</span><br>coverage<br>*.lcov<br><br><span class="hljs-comment"># nyc test coverage</span><br>.nyc_output<br><br><span class="hljs-comment"># Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)</span><br>.grunt<br><br><span class="hljs-comment"># Bower dependency directory (https://bower.io/)</span><br>bower_components<br><br><span class="hljs-comment"># node-waf configuration</span><br>.lock-wscript<br><br><span class="hljs-comment"># Compiled binary addons (https://nodejs.org/api/addons.html)</span><br>build/Release<br><br><span class="hljs-comment"># Dependency directories</span><br>node_modules/<br>jspm_packages/<br><br><span class="hljs-comment"># Snowpack dependency directory (https://snowpack.dev/)</span><br>web_modules/<br><br><span class="hljs-comment"># TypeScript cache</span><br>*.tsbuildinfo<br><br><span class="hljs-comment"># Optional npm cache directory</span><br>.npm<br><br><span class="hljs-comment"># Optional eslint cache</span><br>.eslintcache<br><br><span class="hljs-comment"># Optional stylelint cache</span><br>.stylelintcache<br><br><span class="hljs-comment"># Microbundle cache</span><br>.rpt2_cache/<br>.rts2_cache_cjs/<br>.rts2_cache_es/<br>.rts2_cache_umd/<br><br><span class="hljs-comment"># Optional REPL history</span><br>.node_repl_history<br><br><span class="hljs-comment"># Output of &#x27;npm pack&#x27;</span><br>*.tgz<br><br><span class="hljs-comment"># Yarn Integrity file</span><br>.yarn-integrity<br><br><span class="hljs-comment"># dotenv environment variable files</span><br>.<span class="hljs-built_in">env</span><br>.env.development.local<br>.env.test.local<br>.env.production.local<br>.env.local<br><br><span class="hljs-comment"># parcel-bundler cache (https://parceljs.org/)</span><br>.cache<br>.parcel-cache<br><br><span class="hljs-comment"># Next.js build output</span><br>.next<br>out<br><br><span class="hljs-comment"># Nuxt.js build / generate output</span><br>.nuxt<br>dist<br><br><span class="hljs-comment"># Gatsby files</span><br>.cache/<br><span class="hljs-comment"># Comment in the public line in if your project uses Gatsby and not Next.js</span><br><span class="hljs-comment"># https://nextjs.org/blog/next-9-1#public-directory-support</span><br><span class="hljs-comment"># public</span><br><br><span class="hljs-comment"># vuepress build output</span><br>.vuepress/dist<br><br><span class="hljs-comment"># vuepress v2.x temp and cache directory</span><br>.temp<br>.cache<br><br><span class="hljs-comment"># Docusaurus cache and generated files</span><br>.docusaurus<br><br><span class="hljs-comment"># Serverless directories</span><br>.serverless/<br><br><span class="hljs-comment"># FuseBox cache</span><br>.fusebox/<br><br><span class="hljs-comment"># DynamoDB Local files</span><br>.dynamodb/<br><br><span class="hljs-comment"># TernJS port file</span><br>.tern-port<br><br><span class="hljs-comment"># Stores VSCode versions used for testing VSCode extensions</span><br>.vscode-test<br><br><span class="hljs-comment"># yarn v2</span><br>.yarn/cache<br>.yarn/unplugged<br>.yarn/build-state.yml<br>.yarn/install-state.gz<br>.pnp.*<br><br><br><span class="hljs-comment"># 静态文件</span><br>public <br></code></pre></td></tr></table></figure><h2 id="推送aliyun"><a href="#推送aliyun" class="headerlink" title="推送aliyun"></a>推送aliyun</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 状态</span><br>$ git status<br>hint: core.useBuiltinFSMonitor will be deprecated soon; use core.fsmonitor instead<br>hint: Disable this message with <span class="hljs-string">&quot;git config advice.useCoreFSMonitorConfig false&quot;</span><br>On branch main<br><br>No commits yet<br><br>Untracked files:<br>  (use <span class="hljs-string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="hljs-keyword">in</span> what will be committed)<br>        .dockerignore<br>        .github/<br>        .gitignore<br>        .npmignore<br>        Dockerfile<br>        _config.landscape.yml<br>        _config.yml<br>        db.json<br>        id_rsa_2048<br>        package-lock.json<br>        package.json<br>        scaffolds/<br>        <span class="hljs-built_in">source</span>/<br>        themes/<br>        <br><span class="hljs-comment"># 生成标志</span><br>$ <span class="hljs-built_in">echo</span> <span class="hljs-string">&#x27;1111&#x27;</span> &gt;&gt; <span class="hljs-built_in">source</span>/_posts/hello-world.md<br><br><span class="hljs-comment"># 推送</span><br>git add . <br>git commit -m init<br><br>$ git push origin main<br>Enumerating objects: 122, <span class="hljs-keyword">done</span>.<br>Counting objects: 100% (122/122), <span class="hljs-keyword">done</span>.<br>Delta compression using up to 8 threads<br>Compressing objects: 100% (110/110), <span class="hljs-keyword">done</span>.<br>Writing objects: 100% (122/122), 580.00 KiB | 7.34 MiB/s, <span class="hljs-keyword">done</span>.<br>Total 122 (delta 0), reused 0 (delta 0), pack-reused 0<br>To https://codeup.aliyun.com/5f73e5a3728df4b180fab5ca/myblog-2022-05-12.git<br> * [new branch]      main -&gt; main<br><br></code></pre></td></tr></table></figure><h2 id="aliyun验证"><a href="#aliyun验证" class="headerlink" title="aliyun验证"></a>aliyun验证</h2><p><img src="20220512231059.png" alt="image-20220512231058218"></p><h2 id="添加流水线"><a href="#添加流水线" class="headerlink" title="添加流水线"></a>添加流水线</h2><p><img src="20220512231120.png" alt="image-20220512231118465"></p><p><img src="20220512231146.png" alt="image-20220512231145367"></p><p><img src="20220513000840.png" alt="image-20220513000838863"></p><p><img src="20220512231255.png" alt="image-20220512231253578"></p><p><img src="20220512231628.png" alt="image-20220512231626849"></p><p>删除kubernetes发布</p><p>保存并运行</p><p><img src="20220512231324.png" alt="image-20220512231322519"></p><h2 id="查看运行日志"><a href="#查看运行日志" class="headerlink" title="查看运行日志"></a>查看运行日志</h2><p><img src="20220512232021.png" alt="image-20220512232019242"></p><h2 id="查看github进度"><a href="#查看github进度" class="headerlink" title="查看github进度"></a>查看github进度</h2><p><img src="20220512232122.png" alt="image-20220512232121239"></p><h2 id="查看页面"><a href="#查看页面" class="headerlink" title="查看页面"></a>查看页面</h2><p>当进度为</p><p><img src="20220512232141.png" alt="image-20220512232140087"></p><p><img src="20220512232151.png" alt="image-20220512232150142"></p><h1 id="开发方式"><a href="#开发方式" class="headerlink" title="开发方式"></a>开发方式</h1><h2 id="准备vscode"><a href="#准备vscode" class="headerlink" title="准备vscode"></a>准备vscode</h2><p>在vscode中加载 codeup的仓库</p><p>安装插件 typora  <strong>安装后需要重启vscode</strong></p><p><img src="20220512231737.png" alt="image-20220512231735959"></p><h2 id="本地开发"><a href="#本地开发" class="headerlink" title="本地开发"></a>本地开发</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># clone 代码</span><br><br><span class="hljs-comment"># 安装依赖</span><br>npm install<br><br><span class="hljs-comment"># 运行服务</span><br>npx hexo server<br></code></pre></td></tr></table></figure><blockquote><p><code>npx command</code> 相当于加载了<code>$(npm bin)</code> 目录到环境变量, 后面的命令可以执行</p></blockquote><p>通过本地调试出合理的界面, 推送aliyun, 就可以一键发布</p><h2 id="本地添加文章"><a href="#本地添加文章" class="headerlink" title="本地添加文章"></a>本地添加文章</h2><p>脚本 <code>addarticle.sh</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk">echo -ne <span class="hljs-string">&quot;Enter a \033[1;31mtitle\033[0m for your blog: &quot;</span>; read title<br>[ $? -ne <span class="hljs-number">0</span> ] &amp;&amp; echo <span class="hljs-string">&#x27;exit&#x27;</span> &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>[ -z <span class="hljs-string">&quot;$title&quot;</span> ] &amp;&amp; echo title must be exists. &amp;&amp; sleep <span class="hljs-number">3</span> &amp;&amp; <span class="hljs-keyword">exit</span> <span class="hljs-number">1</span><br>npx hexo new <span class="hljs-string">&quot;$title&quot;</span><br><br>start $(readlink -f .)<span class="hljs-regexp">/source/</span>_posts<br></code></pre></td></tr></table></figure><p>生成文章, 运行脚本</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="个性化页面展示"><a href="#个性化页面展示" class="headerlink" title="个性化页面展示"></a>个性化页面展示</h2><p><a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><ul><li><code>hexo站点配置</code></li><li><code>fluid</code>主题配置</li><li><code>阅读量</code></li><li><code>评论功能</code></li></ul><p>例如修改标题 <code>_config.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">title:</span> <span class="hljs-string">&quot;5-12 23:30&quot;</span><br><span class="hljs-comment"># ...</span><br><br><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 处理typora相对路径</span><br>npm install hexo-typora-asset --registry https://registry.npmjs.org --save<br></code></pre></td></tr></table></figure><p>typora中的配置</p><p><img src="image-20220513092438970.png" alt="image-20220513092438970"></p><p>重启 <code>npx hexo server</code></p><p><img src="20220512233119.png" alt="image-20220512233117729"></p><h2 id="文章默认页面-可选"><a href="#文章默认页面-可选" class="headerlink" title="文章默认页面(可选)"></a>文章默认页面(可选)</h2><p><a href="https://hexo.io/docs/writing#Scaffolds">https://hexo.io/docs/writing#Scaffolds</a></p><p>当我们写大量的文章,发现主页不应该显示所有内容,需要readmore, readmore之前有1小段简介</p><p>如下, 上面的nginx文章会<code>显示标题,简介,readmore</code>, 而下面的hello world就显示所有, 这两者区别在于</p><p>后者,默认</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>前者</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">第1个文章</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2022-05-12 23:27:58</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">hello</span><br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">nginx</span><br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">这篇讲解如何编译安装nginx,</span> <span class="hljs-string">优化nginx</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p><img src="20220512234116.png" alt="image-20220512234114962"></p><p>要实现每个文章创建均生成nginx这样的模板, 编辑 <code>scaffolds/post.md</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> &#123;&#123; <span class="hljs-string">title</span> &#125;&#125;<br><span class="hljs-attr">date:</span> &#123;&#123; <span class="hljs-string">date</span> &#125;&#125;<br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <br><span class="hljs-meta">---</span><br><span class="hljs-meta"></span><br><span class="hljs-comment"># 背景</span><br><br><span class="hljs-string">&lt;!--more--&gt;</span><br></code></pre></td></tr></table></figure><p>现在运行脚本 <code>addarticle.sh</code> 添加<strong>第2个文章</strong></p><p>网页已经达到效果</p><p><img src="20220512234553.png" alt="image-20220512234551537"></p><h2 id="准备一个主题-fluid"><a href="#准备一个主题-fluid" class="headerlink" title="准备一个主题 fluid"></a>准备一个主题 fluid</h2><blockquote><p>使用此主题后, 不需要前面的文章默认页面, 每个页面不需要加<code>&lt;!--more--&gt;</code> 主题会自动抽取前多少个字符,作为描述的.</p></blockquote><p>Fluid主题 <a href="https://blog.csdn.net/yaorongke/article/details/119089190">https://blog.csdn.net/yaorongke/article/details/119089190</a></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">$ git submodule add https:<span class="hljs-regexp">//gi</span>thub.com<span class="hljs-regexp">/fluid-dev/</span>hexo-theme-fluid.git themes/fluid<br></code></pre></td></tr></table></figure><p>编辑 <code>_config.yml</code></p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs clean"># Extensions<br>## Plugins: https:<span class="hljs-comment">//hexo.io/plugins/</span><br>## Themes: https:<span class="hljs-comment">//hexo.io/themes/</span><br>theme: fluid<br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235039.png" alt="image-20220512235038001"></p><p>配置主题 <code>fluid</code> 需要准备一个文件 <code>_config.主题名.yml</code></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">cp themes<span class="hljs-regexp">/fluid/</span>_config.yml _config.fluid.yml<br></code></pre></td></tr></table></figure><p>测试配置是否生效,修改 <code>_config.fluid.yml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># 首页副标题的独立设置</span><br><span class="hljs-comment"># Independent config of home page subtitle</span><br><span class="hljs-attr">slogan:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br><br>  <span class="hljs-comment"># 为空则按 hexo config.subtitle 显示</span><br>  <span class="hljs-comment"># If empty, text based on `subtitle` in hexo config</span><br>  <span class="hljs-attr">text:</span> <span class="hljs-string">&quot;Hello 05-12 .... &quot;</span><br></code></pre></td></tr></table></figure><p>重启 <code>npx hexo server</code></p><p><img src="20220512235647.png" alt="image-20220512235645718"></p><h2 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h2><p>准备脚本 <code>push.sh</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><br>git config --<span class="hljs-built_in">local</span> pull.rebase <span class="hljs-literal">true</span><br>git add .<br>git commit -m <span class="hljs-string">&quot;笔记本-`date +%F_%T`&quot;</span><br><br><br>git push origin main<br><br>git pull origin main<br>[ $? -ne 0 ] &amp;&amp; <span class="hljs-built_in">exit</span> -1<br><br>git push origin main<br><br><span class="hljs-comment"># test</span><br>start $(<span class="hljs-built_in">readlink</span> -f .)/source/_posts<br></code></pre></td></tr></table></figure><p><a href="https://slcnx.github.io/">https://slcnx.github.io/</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
